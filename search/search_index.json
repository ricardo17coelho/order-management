{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"old-documentation/","text":"Old Documentation Applikation Inbetriebnahme Download Der Sourcecode von order-management wird mit Git verwaltet. Als Plattform wird www.github.com verwendet. Um den Sourcecode herunter zu laden kann entweder dieser Command ausgef\u00fchrt werden: git clone https://github.com/ricardo17coelho/order-management.git Oder er kann von folgender URL manuell als .zip heruntergeladen werden: https://github.com/ricardo17coelho/order-management Datenbank Order-Management braucht zwingend eine laufende MSSQL-Datenbank, die auf dem gleichen Host l\u00e4uft, wie die Applikation. Der angemeldete Windows-User muss sich zwingend mit dieser Datenbank verbinden d\u00fcrfen. (Trusted_Connection=True) Bevor man die Applikation startet, muss man die Datenbank vorbereiten. Daf\u00fcr sollte das Visual Studio Projekt ge\u00f6ffnet werden und in der Package Manager Console folgender Command ausgef\u00fchrt werden: Update-Database Dies generiert die n\u00f6tigen Tabellen mit allen dazugeh\u00f6rigen Spalten und Beziehungen. Testdaten Dieser Command generiert nicht nur s\u00e4mtliche Tabellen, sondern auch einige Testdaten, damit order-management dann auch getestet werden kann. Dies wurde in der Methode onModelCreating() im DbContext implementiert. Unser Vorgehen Sourcecode Versionierung Uns war von Anfang an klar, dass wir den Sourcecode mit Git auf Github verwalten wollten. Kanban Als zus\u00e4tzliche Hilfe f\u00fcr die \u00dcbersicht der Tasks verwendeten wir ein Kanban-Board auf www.trello.com. Anfangs definierten wir einige Tasks und teilten sie einander zu. Die ersten Tasks waren: Ricardo: GIT Repo erstellen Ricardo: GUI Mockups erstellen Raphael: ERM erstellen Ricardo: Dashboard (Homescreen) erstellen Raphael: S\u00e4mtliche Entity Models erstellen Danach erstellten wir immer weitere Tasks, priorisierten sie und teilten sie einander zu. Dies ist nur ein kleiner Ausschnitt von unserem Kanban-Board: UI Mockups vs Endergebnis Warum abweicht unser Endprodukt von erstellten Mockups? Am Anfang wollten wir ein einfaches Design f\u00fcr all die Views gestalten und mit Hilfe von verschiedener Farbe, die \u00abviews\u00bb unterscheiden. Jedoch haben wir schnell gemerkt, dass WindowsForms sehr limitiert ist. Sowohl ich als auch Raphael sind daran gewohnt mit guten Frameworks in WEB Bereich zu arbeiten, welche uns viele M\u00f6glichkeiten anbieten und deswegen, dachten wir dass wir hier auch umsetzen k\u00f6nnten, aber das war nicht wirklich m\u00f6glich. Dashboard Vor-/Nachteile Vorteile Nachteile Schnellzugriff Mehrmals gleiche Aktion Z\u00e4hler Responsive Mockup Result Customers Vor-/Nachteile Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich ... Responsive Mockup Result Categories Vor-/Nachteile Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich ... Responsive Mockup Result Catalog Vor-/Nachteile Vorteile Nachteile Zugriff auf Produkte Mockup Result Orders Vor-/Nachteile Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich ... Responsive Mockup Result Products Vor-/Nachteile Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich .. Responsive Mockup Result Settings Vor-/Nachteile Vorteile Nachteile Diverse Einstellung auf eine Seite Mockup Result - Modal Forms Wir haben uns am Angang entschieden, alle Grids + Formulare auf ein Panel darzustellen. Im Verlauf von der Entwicklung haben wir nun gemerkt, dass das nicht so wirklich \u00fcbersichtlich ist. Deswegen haben wir uns dann entschieden, all die Formulare in einer separaten Modal Fenster anzuzeigen. Somit erreichen wir ein besseres Design f\u00fcr unsere Grid und die ADD und DELETE Operationen, k\u00f6nnen sauber \u00fcber dieses Modal Dialog gel\u00f6st werden. Beim Klicken auf \u00abAdd\u00bb wird das Formular gel\u00f6scht und eine neuen Datensatz kann erfasst werden. Wenn 1 Datensatz im Grid ausgew\u00e4hlt ist, dann kann man auf \u00abEdit\u00bb Button dr\u00fccken, das Modal wird ge\u00f6ffnet und die Felder werden mit der ausgew\u00e4hlte Datensatz gef\u00fcllt. Beim Speichern wird dann beachtet, ob die Datensatz bereits ein ID hat oder nicht. Falls ja, werden die Felder in der DB ge\u00e4ndert, falls nicht, wird eine neue Datensatz in der DB angelegt","title":"Old Documentation"},{"location":"old-documentation/#old-documentation","text":"","title":"Old Documentation"},{"location":"old-documentation/#applikation-inbetriebnahme","text":"","title":"Applikation Inbetriebnahme"},{"location":"old-documentation/#download","text":"Der Sourcecode von order-management wird mit Git verwaltet. Als Plattform wird www.github.com verwendet. Um den Sourcecode herunter zu laden kann entweder dieser Command ausgef\u00fchrt werden: git clone https://github.com/ricardo17coelho/order-management.git Oder er kann von folgender URL manuell als .zip heruntergeladen werden: https://github.com/ricardo17coelho/order-management","title":"Download"},{"location":"old-documentation/#datenbank","text":"Order-Management braucht zwingend eine laufende MSSQL-Datenbank, die auf dem gleichen Host l\u00e4uft, wie die Applikation. Der angemeldete Windows-User muss sich zwingend mit dieser Datenbank verbinden d\u00fcrfen. (Trusted_Connection=True) Bevor man die Applikation startet, muss man die Datenbank vorbereiten. Daf\u00fcr sollte das Visual Studio Projekt ge\u00f6ffnet werden und in der Package Manager Console folgender Command ausgef\u00fchrt werden: Update-Database Dies generiert die n\u00f6tigen Tabellen mit allen dazugeh\u00f6rigen Spalten und Beziehungen.","title":"Datenbank"},{"location":"old-documentation/#testdaten","text":"Dieser Command generiert nicht nur s\u00e4mtliche Tabellen, sondern auch einige Testdaten, damit order-management dann auch getestet werden kann. Dies wurde in der Methode onModelCreating() im DbContext implementiert.","title":"Testdaten"},{"location":"old-documentation/#unser-vorgehen","text":"","title":"Unser Vorgehen"},{"location":"old-documentation/#sourcecode-versionierung","text":"Uns war von Anfang an klar, dass wir den Sourcecode mit Git auf Github verwalten wollten.","title":"Sourcecode Versionierung"},{"location":"old-documentation/#kanban","text":"Als zus\u00e4tzliche Hilfe f\u00fcr die \u00dcbersicht der Tasks verwendeten wir ein Kanban-Board auf www.trello.com. Anfangs definierten wir einige Tasks und teilten sie einander zu. Die ersten Tasks waren: Ricardo: GIT Repo erstellen Ricardo: GUI Mockups erstellen Raphael: ERM erstellen Ricardo: Dashboard (Homescreen) erstellen Raphael: S\u00e4mtliche Entity Models erstellen Danach erstellten wir immer weitere Tasks, priorisierten sie und teilten sie einander zu. Dies ist nur ein kleiner Ausschnitt von unserem Kanban-Board:","title":"Kanban"},{"location":"old-documentation/#ui","text":"","title":"UI"},{"location":"old-documentation/#mockups-vs-endergebnis","text":"Warum abweicht unser Endprodukt von erstellten Mockups? Am Anfang wollten wir ein einfaches Design f\u00fcr all die Views gestalten und mit Hilfe von verschiedener Farbe, die \u00abviews\u00bb unterscheiden. Jedoch haben wir schnell gemerkt, dass WindowsForms sehr limitiert ist. Sowohl ich als auch Raphael sind daran gewohnt mit guten Frameworks in WEB Bereich zu arbeiten, welche uns viele M\u00f6glichkeiten anbieten und deswegen, dachten wir dass wir hier auch umsetzen k\u00f6nnten, aber das war nicht wirklich m\u00f6glich.","title":"Mockups vs Endergebnis"},{"location":"old-documentation/#dashboard","text":"","title":"Dashboard"},{"location":"old-documentation/#vor-nachteile","text":"Vorteile Nachteile Schnellzugriff Mehrmals gleiche Aktion Z\u00e4hler Responsive Mockup Result","title":"Vor-/Nachteile"},{"location":"old-documentation/#customers","text":"","title":"Customers"},{"location":"old-documentation/#vor-nachteile_1","text":"Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich ... Responsive Mockup Result","title":"Vor-/Nachteile"},{"location":"old-documentation/#categories","text":"","title":"Categories"},{"location":"old-documentation/#vor-nachteile_2","text":"Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich ... Responsive Mockup Result","title":"Vor-/Nachteile"},{"location":"old-documentation/#catalog","text":"","title":"Catalog"},{"location":"old-documentation/#vor-nachteile_3","text":"Vorteile Nachteile Zugriff auf Produkte Mockup Result","title":"Vor-/Nachteile"},{"location":"old-documentation/#orders","text":"","title":"Orders"},{"location":"old-documentation/#vor-nachteile_4","text":"Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich ... Responsive Mockup Result","title":"Vor-/Nachteile"},{"location":"old-documentation/#products","text":"","title":"Products"},{"location":"old-documentation/#vor-nachteile_5","text":"Vorteile Nachteile Keine Zus\u00e4tzliche Fenster Un\u00fcbersichtlich .. Responsive Mockup Result","title":"Vor-/Nachteile"},{"location":"old-documentation/#settings","text":"","title":"Settings"},{"location":"old-documentation/#vor-nachteile_6","text":"Vorteile Nachteile Diverse Einstellung auf eine Seite Mockup Result -","title":"Vor-/Nachteile"},{"location":"old-documentation/#modal-forms","text":"Wir haben uns am Angang entschieden, alle Grids + Formulare auf ein Panel darzustellen. Im Verlauf von der Entwicklung haben wir nun gemerkt, dass das nicht so wirklich \u00fcbersichtlich ist. Deswegen haben wir uns dann entschieden, all die Formulare in einer separaten Modal Fenster anzuzeigen. Somit erreichen wir ein besseres Design f\u00fcr unsere Grid und die ADD und DELETE Operationen, k\u00f6nnen sauber \u00fcber dieses Modal Dialog gel\u00f6st werden. Beim Klicken auf \u00abAdd\u00bb wird das Formular gel\u00f6scht und eine neuen Datensatz kann erfasst werden. Wenn 1 Datensatz im Grid ausgew\u00e4hlt ist, dann kann man auf \u00abEdit\u00bb Button dr\u00fccken, das Modal wird ge\u00f6ffnet und die Felder werden mit der ausgew\u00e4hlte Datensatz gef\u00fcllt. Beim Speichern wird dann beachtet, ob die Datensatz bereits ein ID hat oder nicht. Falls ja, werden die Felder in der DB ge\u00e4ndert, falls nicht, wird eine neue Datensatz in der DB angelegt","title":"Modal Forms"}]}