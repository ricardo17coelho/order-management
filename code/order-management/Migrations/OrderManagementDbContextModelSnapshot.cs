// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using order_management;

namespace order_management.Migrations
{
    [DbContext(typeof(OrderManagementDbContext))]
    partial class OrderManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("order_management.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Brutto")
                        .HasColumnType("float");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Netto")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            BillId = 1000,
                            Brutto = 107.7,
                            City = "Wil",
                            Country = "Schweiz",
                            CustomerId = 1000,
                            FirstName = "Hans",
                            LastName = "Müller",
                            Netto = 100.0,
                            OrderDate = new DateTime(2018, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1000,
                            Street = "Bahnhofstrasse",
                            StreetNr = "12a",
                            Zip = 9400
                        },
                        new
                        {
                            BillId = 1001,
                            Brutto = 215.19999999999999,
                            City = "Wil",
                            Country = "Schweiz",
                            CustomerId = 1000,
                            FirstName = "Hans",
                            LastName = "Müller",
                            Netto = 200.0,
                            OrderDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1005,
                            Street = "Bahnhofstrasse",
                            StreetNr = "12a",
                            Zip = 9400
                        },
                        new
                        {
                            BillId = 1002,
                            Brutto = 100.0,
                            City = "Uznach",
                            Country = "Schweiz",
                            CustomerId = 1001,
                            FirstName = "Peter",
                            LastName = "Haller",
                            Netto = 75.0,
                            OrderDate = new DateTime(2019, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1004,
                            Street = "Dorfstrasse",
                            StreetNr = "5",
                            Zip = 8452
                        },
                        new
                        {
                            BillId = 1003,
                            Brutto = 57.5,
                            City = "Uznach",
                            Country = "Schweiz",
                            CustomerId = 1001,
                            FirstName = "Peter",
                            LastName = "Haller",
                            Netto = 50.0,
                            OrderDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1002,
                            Street = "Dorfstrasse",
                            StreetNr = "5",
                            Zip = 8452
                        },
                        new
                        {
                            BillId = 1004,
                            Brutto = 80.5,
                            City = "Zuckenriet",
                            Country = "Schweiz",
                            CustomerId = 1002,
                            FirstName = "Ueli",
                            LastName = "Moser",
                            Netto = 75.0,
                            OrderDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1007,
                            Street = "Lindenstrasse",
                            StreetNr = "27",
                            Zip = 4524
                        });
                });

            modelBuilder.Entity("order_management.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1000,
                            City = "Uznach",
                            Country = "Schweiz",
                            CustomerNr = "CU95216",
                            Email = "hans.mueller@gmail.com",
                            FirstName = "Hans",
                            LastName = "Müller",
                            Password = "SuperSavePW&1",
                            Street = "Dorfstrasse",
                            StreetNr = "12a",
                            Website = "hanshueller.ch",
                            Zip = 5642
                        },
                        new
                        {
                            CustomerId = 1001,
                            City = "Wil",
                            Country = "Schweiz",
                            CustomerNr = "CU51238",
                            Email = "ueli.moser@gmail.com",
                            FirstName = "Ueli",
                            LastName = "Moser",
                            Password = "SuperSavePW&2",
                            Street = "Lindenstrasse",
                            StreetNr = "12a",
                            Website = "uelimoser.ch",
                            Zip = 4444
                        },
                        new
                        {
                            CustomerId = 1002,
                            City = "Schlieren",
                            Country = "Schweiz",
                            CustomerNr = "CU42681",
                            Email = "max.mustermann@gmail.com",
                            FirstName = "Max",
                            LastName = "Mustermann",
                            Password = "SuperSavePW&3",
                            Street = "Rosenweg",
                            StreetNr = "12a",
                            Website = "maxmustermann.ch",
                            Zip = 5642
                        },
                        new
                        {
                            CustomerId = 1003,
                            City = "Goldach",
                            Country = "Schweiz",
                            CustomerNr = "CU12384",
                            Email = "vreni.kuster@gmail.com",
                            FirstName = "Vreni",
                            LastName = "Kuster",
                            Password = "SuperSavePW&4",
                            Street = "Bahnhofplatz",
                            StreetNr = "12a",
                            Website = "vrenikuster.ch",
                            Zip = 8421
                        },
                        new
                        {
                            CustomerId = 1004,
                            City = "Zürich",
                            Country = "Schweiz",
                            CustomerNr = "CU54687",
                            Email = "petra.schwarz@gmail.com",
                            FirstName = "Petra",
                            LastName = "Schwarz",
                            Password = "SuperSavePW&5",
                            Street = "Lindenstrasse",
                            StreetNr = "12a",
                            Website = "petraschwarz.ch",
                            Zip = 4526
                        },
                        new
                        {
                            CustomerId = 1005,
                            City = "Au",
                            Country = "Schweiz",
                            CustomerNr = "CU15468",
                            Email = "andreas.rot@gmail.com",
                            FirstName = "Andreas",
                            LastName = "Rot",
                            Password = "SuperSavePW&6",
                            Street = "Huebstrasse",
                            StreetNr = "12a",
                            Website = "andreasrot.ch",
                            Zip = 8423
                        },
                        new
                        {
                            CustomerId = 1006,
                            City = "Hundwil",
                            Country = "Schweiz",
                            CustomerNr = "CU56481",
                            Email = "juergen@gmail.com",
                            FirstName = "Jürgen",
                            LastName = "Blyatman",
                            Password = "SuperSavePW&7",
                            Street = "Hinter dem Baum",
                            StreetNr = "12a",
                            Website = "juergenblyatmann.ch",
                            Zip = 4246
                        },
                        new
                        {
                            CustomerId = 1007,
                            City = "Au",
                            Country = "Schweiz",
                            CustomerNr = "CU94254",
                            Email = "oskar.kanban@gmail.com",
                            FirstName = "Oskar",
                            LastName = "Kanban",
                            Password = "SuperSavePW&8",
                            Street = "Blumenstrasse",
                            StreetNr = "12a",
                            Website = "oskarkanban.ch",
                            Zip = 8425
                        },
                        new
                        {
                            CustomerId = 1008,
                            City = "Wil",
                            Country = "Schweiz",
                            CustomerNr = "CU16481",
                            Email = "karin@gmail.com",
                            FirstName = "Karin",
                            LastName = "Blattsalat",
                            Password = "SuperSavePW&9",
                            Street = "Bachfeldstrasse",
                            StreetNr = "12a",
                            Website = "karinblattsalat.ch",
                            Zip = 6515
                        },
                        new
                        {
                            CustomerId = 1009,
                            City = "Zuckenriet",
                            Country = "Schweiz",
                            CustomerNr = "CU64521",
                            Email = "peter.haller@gmail.com",
                            FirstName = "Peter",
                            LastName = "Haller",
                            Password = "SuperSavePW&10",
                            Street = "Dorfstrasse",
                            StreetNr = "5",
                            Website = "peterhaller.ch",
                            Zip = 8516
                        });
                });

            modelBuilder.Entity("order_management.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1000,
                            CustomerId = 1000,
                            OrderDate = new DateTime(2018, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1001,
                            CustomerId = 1000,
                            OrderDate = new DateTime(2019, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1002,
                            CustomerId = 1001,
                            OrderDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1003,
                            CustomerId = 1001,
                            OrderDate = new DateTime(2019, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1004,
                            CustomerId = 1001,
                            OrderDate = new DateTime(2018, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1005,
                            CustomerId = 1003,
                            OrderDate = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1006,
                            CustomerId = 1004,
                            OrderDate = new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1007,
                            CustomerId = 1005,
                            OrderDate = new DateTime(2018, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1008,
                            CustomerId = 1006,
                            OrderDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1009,
                            CustomerId = 1007,
                            OrderDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        },
                        new
                        {
                            OrderId = 1010,
                            CustomerId = 1008,
                            OrderDate = new DateTime(2019, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tax = 7.7000000000000002
                        });
                });

            modelBuilder.Entity("order_management.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1000,
                            OrderId = 1000,
                            ProductId = 1001,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1001,
                            OrderId = 1000,
                            ProductId = 1004,
                            Quantity = 4
                        },
                        new
                        {
                            OrderDetailId = 1002,
                            OrderId = 1000,
                            ProductId = 1005,
                            Quantity = 4
                        },
                        new
                        {
                            OrderDetailId = 1003,
                            OrderId = 1000,
                            ProductId = 1002,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1004,
                            OrderId = 1000,
                            ProductId = 1003,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1005,
                            OrderId = 1001,
                            ProductId = 1008,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1006,
                            OrderId = 1001,
                            ProductId = 1001,
                            Quantity = 4
                        },
                        new
                        {
                            OrderDetailId = 1007,
                            OrderId = 1002,
                            ProductId = 1003,
                            Quantity = 3
                        },
                        new
                        {
                            OrderDetailId = 1008,
                            OrderId = 1002,
                            ProductId = 1004,
                            Quantity = 12
                        },
                        new
                        {
                            OrderDetailId = 1009,
                            OrderId = 1003,
                            ProductId = 1004,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1010,
                            OrderId = 1003,
                            ProductId = 1005,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1011,
                            OrderId = 1003,
                            ProductId = 1006,
                            Quantity = 5
                        },
                        new
                        {
                            OrderDetailId = 1012,
                            OrderId = 1004,
                            ProductId = 1007,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1013,
                            OrderId = 1004,
                            ProductId = 1008,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1014,
                            OrderId = 1004,
                            ProductId = 1008,
                            Quantity = 3
                        },
                        new
                        {
                            OrderDetailId = 1015,
                            OrderId = 1005,
                            ProductId = 1002,
                            Quantity = 4
                        },
                        new
                        {
                            OrderDetailId = 1016,
                            OrderId = 1005,
                            ProductId = 1001,
                            Quantity = 5
                        },
                        new
                        {
                            OrderDetailId = 1017,
                            OrderId = 1005,
                            ProductId = 1001,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1018,
                            OrderId = 1005,
                            ProductId = 1006,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1019,
                            OrderId = 1006,
                            ProductId = 1001,
                            Quantity = 4
                        },
                        new
                        {
                            OrderDetailId = 1020,
                            OrderId = 1006,
                            ProductId = 1002,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1021,
                            OrderId = 1007,
                            ProductId = 1003,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1022,
                            OrderId = 1007,
                            ProductId = 1004,
                            Quantity = 4
                        },
                        new
                        {
                            OrderDetailId = 1023,
                            OrderId = 1007,
                            ProductId = 1008,
                            Quantity = 3
                        },
                        new
                        {
                            OrderDetailId = 1024,
                            OrderId = 1008,
                            ProductId = 1001,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1025,
                            OrderId = 1009,
                            ProductId = 1002,
                            Quantity = 12
                        },
                        new
                        {
                            OrderDetailId = 1026,
                            OrderId = 1009,
                            ProductId = 1004,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1027,
                            OrderId = 1010,
                            ProductId = 1003,
                            Quantity = 64
                        },
                        new
                        {
                            OrderDetailId = 1028,
                            OrderId = 1010,
                            ProductId = 1006,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailId = 1029,
                            OrderId = 1010,
                            ProductId = 1001,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailId = 1030,
                            OrderId = 1010,
                            ProductId = 1007,
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("order_management.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1000,
                            Date = new DateTime(2018, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300.0,
                            ProductCategoryId = 1000,
                            ProductName = "HP Compaq 24 Inch",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1001,
                            Date = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 899.0,
                            ProductCategoryId = 1001,
                            ProductName = "Samsung 49HG90 49 Inch",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1002,
                            Date = new DateTime(2020, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60.0,
                            ProductCategoryId = 1003,
                            ProductName = "Logitech Ergonomic",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1003,
                            Date = new DateTime(2019, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1200.0,
                            ProductCategoryId = 1006,
                            ProductName = "Super Chair 2000",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1004,
                            Date = new DateTime(2018, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50.0,
                            ProductCategoryId = 1006,
                            ProductName = "Bad Chaur 100",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1005,
                            Date = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 7000.0,
                            ProductCategoryId = 1007,
                            ProductName = "Nitro Concepts 300",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1006,
                            Date = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300.0,
                            ProductCategoryId = 1002,
                            ProductName = "Samsung super Curved Monitor 30 Inch",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1007,
                            Date = new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2000.0,
                            ProductCategoryId = 1005,
                            ProductName = "Super Table",
                            Unit = "Fr."
                        },
                        new
                        {
                            ProductId = 1008,
                            Date = new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 250.0,
                            ProductCategoryId = 1005,
                            ProductName = "Bad Table",
                            Unit = "Fr."
                        });
                });

            modelBuilder.Entity("order_management.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("ParentId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1000,
                            ProductCategoryName = "Computer Equipment"
                        },
                        new
                        {
                            ProductCategoryId = 1001,
                            ParentId = 1000,
                            ProductCategoryName = "Monitors"
                        },
                        new
                        {
                            ProductCategoryId = 1002,
                            ParentId = 1001,
                            ProductCategoryName = "Curved"
                        },
                        new
                        {
                            ProductCategoryId = 1003,
                            ParentId = 1000,
                            ProductCategoryName = "Keyboards"
                        },
                        new
                        {
                            ProductCategoryId = 1004,
                            ProductCategoryName = "Furniture"
                        },
                        new
                        {
                            ProductCategoryId = 1005,
                            ParentId = 1004,
                            ProductCategoryName = "Tables"
                        },
                        new
                        {
                            ProductCategoryId = 1006,
                            ParentId = 1004,
                            ProductCategoryName = "Chairs"
                        },
                        new
                        {
                            ProductCategoryId = 1007,
                            ParentId = 1006,
                            ProductCategoryName = "Office Chairs"
                        });
                });

            modelBuilder.Entity("order_management.YoyComparison", b =>
                {
                    b.Property<int>("AvgCountProductsPerOrder")
                        .HasColumnType("int");

                    b.Property<int>("CountOrders")
                        .HasColumnType("int");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalRevenue")
                        .HasColumnType("float");
                });

            modelBuilder.Entity("order_management.Order", b =>
                {
                    b.HasOne("order_management.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("order_management.OrderDetail", b =>
                {
                    b.HasOne("order_management.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("order_management.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("order_management.Product", b =>
                {
                    b.HasOne("order_management.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("order_management.ProductCategory", b =>
                {
                    b.HasOne("order_management.ProductCategory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
